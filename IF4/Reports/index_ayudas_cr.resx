<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iy2ZZhDEugIabFEpHOSScSSSSTpJJggggP/Z
</value>
  </data>
</root>